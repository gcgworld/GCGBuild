
0) Create partition with tmpfs and proper permissions to isolate the
	guest/edit image env from the host. When run as root, if not
	properly shutdown, privileges can invade host somehow. Live user
	in guest installation becomes super user in host.

0a) Convert intercom folder-share to named_pipes, then convert those
	to sockets.

	



	Functions:
		1) Error/Shutdown signal should clean-up host.
		2) Jail purse signal should request file resources.
		3)

0b) Can GCGLines just use the build mount?
		A) YES. AND IT SHOULD.
		B) the ubuntu bootloader is a convoluted pile of bullshit in 14.04
		C) Fedora's is remarkably simple
		

0c) 




###DONE###
1) Write function to search for filesystem.squashfs to open it up to
	a shit load of other distros.
###DONE###

###DONE###
a1)deepkg-cleaning and install are one thing now.
	a) it parses config files and removes or adds packages based on that.
	b) add the functions for parsing the install file.
###DONE###

1a) Pass vars into jailpurse immediately after copying it for the edit.

###DONE###
1b) functions can take fucking parameters.
	the mechanism to accomplish this is as follows:
		-1) Write the script in such a way that it can call itself back
		0) Depending on the arguments, the script will know where it
				is in it's exection cycle.
		1) collect the parameters into variables.
		2) recall the script with the variables as parameters.
		3) enjoy being able to pass parameters into functions in Bash.
	a) verbosity and logging are now parameters that get fed into every
		function and not 6-9 extra lines of code in a function.


###DONE###
Functions in bash can't take parameters, unless you them in as variables.

	b) figure out how to break the generic helper functions into a 
		separate library. Create generic functions to help with sysadmin
		tasks while you're at it.

###DONE###
1c) dpkg-it-casual ~> jailpurse/bedroom needs to prove out.
###DONE###

###DONE###
1d) create man page.
###DONE###


###IN PROGRESS
1f) Identify all of the branding spots. Change the uname lsb_release, etc.. (gcglines)
###NOTE:
### 	This process has expanded into removing the ubuntu root-kit to add the GIO server.
###		LTMS, Apport, and whatever else we find objectionable in there. If it turns out to
###		load the signed EFI and we are going to have to recreate signatures for everything.
###		This might actually be good practice, but it seems like it would be tedious too.



1i) LXC support for virtual machines. (Is LXC still a working standard?) (gcglines)


###I TRIED BUT ITS IN PROGRESS
2) Put no weight on logging until acct and whowatch are investigated to serve
	the purpose of documenting steps taken when editing a build.
	(though figuring out how to create the wrapper functions for all events should be a great fucking exercise.)





5) Branding. Don't be tech, be a hipster. Swear a lot.



**) Build a Debian package out of it.





#####################################################################################
Currently irrelevant shit.

###DONE###
3) Configs that to be out of the box:
		AIDE
		Snort
		OpenSSH
		DNSSEC
		
### all of this shit is perks. the product right now is customization.
### If people dig it, we can start giving out prefab configs.
###DONE###


###DONE###
4) Pick an http server, install that bitch with a site running.
### fuck this one. User can pick their own server. we can add secure
### config later.
### use python -m SimpleHTTPServer for web shit.
###DONE###

6) Random ssh ports.

7) DNS check, by inquiring multiple servers in different regions, using basic 
	statistics to determine what's good.

1e) Go back through CIS hardening guide and make sure you've got those bases covered.
(This falls under the purview of gcglines with jailpurse as the delivery mechanism.)
Keep in mind that check list security is pretty much bullshit. It gives you a false
sense that you covered your bases, there are however for most common use services, (i.e.
databases, servers, any thing that opens a port and talks to other computers..)
fundamental setup regiments that everyone knows. These basic security steps, like changing
the mysql root password, should be fucking automatic already. Ideally, there should
be no point in time when the computer is setting up a service that connects to 
other computers, while connected to the interne